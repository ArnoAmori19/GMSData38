SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE PROCEDURE [dbo].[t_SaleSrv_xPos_Waresgr](@CRID int)/* xPOS: Выгружает группы товаров */ASBEGIN  DECLARE   @Categories varchar(250), @Groups varchar(250), @OldCat int,   @PCatID int, @PGrID int, @PCatName varchar(50), @PGrName varchar(50), @Delim varchar(10)  SELECT @Categories = dbo.zf_Var('Rest_CatFilter')  SELECT @Groups = dbo.zf_Var('Rest_GroupFilter')  SELECT @Delim = dbo.zf_Var('z_FilterListSeparator')  CREATE TABLE #SaleSrv_xPOSWaresgrTemp(    PGrID int,    CODE varchar(22),    PARENTCODE varchar(22),    NAME varchar(50),    SHORTNAME varchar(20)  )  DECLARE CurGr CURSOR FAST_FORWARD LOCAL FOR    SELECT DISTINCT m.PCatID, m.PGrID, c.PCatName, g.PGrName    FROM r_Prods m WITH(NOLOCK), r_ProdC c WITH(NOLOCK), r_ProdG g WITH(NOLOCK)    WHERE m.PGrID = g.PGrID AND m.PCatID = c.PCatID AND c.PCatID > 0 AND          dbo.zf_MatchFilterInt(m.PCatID, @Categories, @Delim) = 1 AND          dbo.zf_MatchFilterInt(m.PGrID, @Groups, @Delim) = 1    ORDER BY m.PCatID, m.PGrID  OPEN CurGr    IF @@error <> 0 GOTO Error    SET @OldCat = -1    FETCH NEXT FROM CurGr    INTO @PCatID, @PGrID, @PCatName, @PGrName    WHILE @@FETCH_STATUS = 0    BEGIN      IF @OldCat <> @PCatID         BEGIN          SET @OldCat = @PCatID          INSERT INTO #SaleSrv_xPOSWaresgrTemp(PGrID, CODE, PARENTCODE, NAME, SHORTNAME)           VALUES (@PCatID, @PCatID, 0, LEFT(@PCatName, 50), LEFT(@PCatName, 20))        END      /* Пункт "Общая группа" в меню не пишем */      IF @PGrID > 0      INSERT INTO #SaleSrv_xPOSWaresgrTemp(PGrID, CODE, PARENTCODE, NAME, SHORTNAME)      VALUES (@PGrID + @PCatID*100000, @PGrID + @PCatID*100000, @PCatID, LEFT(@PGrName, 50), LEFT(@PGrName, 20))      FETCH NEXT FROM CurGr      INTO @PCatID, @PGrID, @PCatName, @PGrName    END    CLOSE CurGr    DEALLOCATE CurGr  CREATE TABLE #SaleSrv_xPOSWaresTempW(    CODE varchar(20),    WGCODE varchar(22),    SCTCODE int,      NAME varchar(200),    SHORTNAME varchar(42),    AVAIL bit,    NOTE varchar(200),    BARCODE varchar(42),    FTYPE varchar(10)    )  INSERT INTO #SaleSrv_xPOSWaresTempW EXEC ('t_SaleSrv_xPos_Wares ' +  @CRID)  /* Убираем пустые пункты меню */  /* Фильтруем пункты меню 2 уровня в соответствии с тем, есть ли в них товары */  SELECT CODE, PARENTCODE, NAME, SHORTNAME FROM #SaleSrv_xPOSWaresgrTemp WHERE PGrID < 100000  UNION  SELECT t.CODE, t.PARENTCODE, t.NAME, t.SHORTNAME FROM #SaleSrv_xPOSWaresgrTemp t, #SaleSrv_xPOSWaresTempW w WHERE t.CODE = w.WGCODE  DROP TABLE #SaleSrv_xPOSWaresgrTemp  DROP TABLE #SaleSrv_xPOSWaresTempW  RETURN 0Error:  IF @@TranCount > 0 ROLLBACK TRAN  RETURN 1END
GO
