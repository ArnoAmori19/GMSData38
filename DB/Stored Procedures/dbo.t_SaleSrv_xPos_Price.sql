SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE PROCEDURE [dbo].[t_SaleSrv_xPos_Price](@CRID int)/* xPOS: Выгружает цены товаров для всех прайс-листов по коду ЭККА */ASBEGIN  DECLARE @HideZeroRems bit, @PCatID int, @PGrID int, @Delim varchar(10),          @ProdID int, @RateMC numeric(21, 9), @Categories varchar(250), @Groups varchar(250)  SELECT @HideZeroRems = CAST(dbo.zf_Var('t_SaleHideZeroRems') AS bit)  SELECT @Categories = dbo.zf_Var('Rest_CatFilter')  SELECT @Groups = dbo.zf_Var('Rest_GroupFilter')  SELECT @Delim = dbo.zf_Var('z_FilterListSeparator')  CREATE TABLE #SaleSrv_xPOSWaresTempPR(    CODE varchar(20),    WGCODE int,    SCTCODE int,      NAME varchar(200),    SHORTNAME varchar(200),    AVAIL bit,    Note varchar(200),    BarCode varchar(42),    FType char(1)  )  CREATE TABLE #SaleSrv_xPOSPriceTemp(    ProdID int,    CODE varchar(20),    PLID int,    Price numeric(21, 9)  )  INSERT INTO #SaleSrv_xPOSWaresTempPR EXEC ('t_SaleSrv_xPos_Wares ' + @CRID)  DECLARE ProdCursor CURSOR LOCAL FAST_FORWARD FOR  SELECT CAST(CASE FType WHEN 'N' THEN SUBSTRING(t.CODE, 2, 20) ELSE t.CODE END AS varchar(20)) AS NormalCODE, t.CODE AS CODE, t.BarCode, p.PLID FROM #SaleSrv_xPOSWaresTempPR t, r_PLs p  SELECT @RateMC = dbo.zf_GetRateMC(dbo.zf_GetCurrCC())   DECLARE @BarCode varchar(42)  DECLARE @PLID int  DECLARE @PriceCC_wt numeric(21, 9)  DECLARE @CODE varchar(20)  DECLARE @AResult int   OPEN ProdCursor  FETCH NEXT FROM ProdCursor INTO @ProdID, @CODE, @BarCode, @PLID  WHILE @@FETCH_STATUS = 0    BEGIN      EXEC t_GetPriceCCPL @ProdID, @RateMC, 0, @PLID, @PriceCC_wt OUTPUT          IF @PriceCC_wt > 0      INSERT INTO #SaleSrv_xPOSPriceTemp(ProdID, CODE, PLID, Price)      VALUES(@ProdID, @CODE, @PLID, @PriceCC_wt)      FETCH NEXT FROM ProdCursor INTO @ProdID, @CODE, @BarCode, @PLID      IF @@error <> 0 GOTO Error    END  CLOSE ProdCursor  DEALLOCATE ProdCursor  SELECT CODE AS WARESCODE, PLID AS PLCODE, Price AS PRICE FROM #SaleSrv_xPOSPriceTemp      DROP TABLE #SaleSrv_xPOSWaresTempPR  DROP TABLE #SaleSrv_xPOSPriceTemp  RETURN 0Error:  IF @@TranCount > 0 ROLLBACK TRAN  RETURN 1END
GO
