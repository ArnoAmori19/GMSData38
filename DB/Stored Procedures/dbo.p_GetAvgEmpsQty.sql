SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE PROCEDURE [dbo].[p_GetAvgEmpsQty](@Date datetime, @OurID int)/* Рассчитывает среднесписочную численность за месяц */ASBEGIN  DECLARE @EDate datetime, @c int  CREATE TABLE #out(Mode int, SrcDate datetime, TaxRegionID int, EmpsQty numeric(21, 9), AvgEmpsQty numeric(21, 9), CommunalSumCC numeric(21, 9), CostGAccID int)  SET @EDate = dbo.zf_GetMonthLastDay(@Date)  SET @Date =  dbo.zf_GetMonthFirstDay(@Date)  SET @c = 0  WHILE @Date <= @EDate    BEGIN      INSERT INTO #out (SrcDate, TaxRegionID, EmpsQty, CostGAccID)      SELECT @Date, s.TaxRegionID, COUNT(*) EmpsQty, p.CostGAccID      FROM   r_EmpMPst e JOIN r_Subs s ON e.SubID = s.SubID JOIN r_Posts p ON e.PostID = p.PostID      WHERE  @Date BETWEEN BDate AND EDate             /* исключить совместителей */             AND Joint = 0             /* исключить служащих на больничном по беременности и родам */             AND NOT EXISTS(SELECT 1 FROM p_ESic WHERE @Date BETWEEN SickBDate AND SickEDate AND SickType = 8 AND EmpID = e.EmpID AND OurID = @OurID)             /* исключить служащих в отпуске по беременности и родам и уходу за ребенком (41, 42, 43) */             AND NOT EXISTS(SELECT 1 FROM p_ELeav m JOIN p_ELeavD d ON m.ChID = d.ChID WHERE @Date BETWEEN BDate AND EDate AND LeavType IN (41, 42, 43) AND EmpID = e.EmpID AND OurID = @OurID)      GROUP BY OurID, s.TaxRegionID, p.CostGAccID      SET @Date = DATEADD(DAY, 1, @Date)      SET @c = @c + 1    END  /* mode = 0: среднесписочная численность в разрезе регионов местных налогов */  INSERT INTO #out (Mode, TaxRegionID, EmpsQty, AvgEmpsQty)  SELECT 0, TaxRegionID, SUM(EmpsQty), ROUND(SUM(EmpsQty) / @c, 0)  FROM #out  GROUP BY TaxRegionID ORDER BY TaxRegionID  /* mode = 1: среднесписочная численность в разрезе регионов местных налогов и счетов затрат, указанных в справочнике должностей */  INSERT INTO #out (Mode, TaxRegionID, CostGAccID, AvgEmpsQty )  SELECT 1, t1.TaxRegionID, t1.CostGAccID, SUM(t1.EmpsQty) / t2.EmpsQty * t2.AvgEmpsQty  FROM #out t1, #out t2  WHERE t1.TaxRegionID = t2.TaxRegionID AND t2.Mode = 0 AND t1.Mode IS NULL  GROUP BY t1.TaxRegionID, t1.Mode, t1.CostGAccID, t2.EmpsQty, t2.AvgEmpsQty  ORDER BY t1.TaxRegionID, t1.Mode, t1.CostGAccID  /* Удаление промежуточных данных */  DELETE #out WHERE Mode IS NULL  /* Расчет суммы  коммунального налога */  UPDATE #out SET CommunalSumCC =  ROUND(AvgEmpsQty * dbo.pf_GetCommunalTaxRate(@EDate, TaxRegionID), 2)  /* Коррекция расхождения сумм после округления */  UPDATE t1 SET CommunalSumCC = t1.CommunalSumCC + (t3.CommunalSumCC - t4.CommunalSumCC)  FROM #out t1     JOIN (SELECT TaxRegionID, MAX(CostGAccID) AS CostGAccID FROM #out WHERE Mode = 1 GROUP BY TaxRegionID) t2 ON t1.TaxRegionID = t2.TaxRegionID AND t1.CostGAccID = t2.CostGAccID     JOIN (SELECT TaxRegionID, CommunalSumCC FROM #out WHERE Mode = 0) t3 ON t1.TaxRegionID = t3.TaxRegionID     JOIN (SELECT TaxRegionID, SUM(CommunalSumCC) CommunalSumCC FROM #out WHERE Mode = 1 GROUP BY TaxRegionID) t4 ON t1.TaxRegionID = t4.TaxRegionID  WHERE t1.Mode = 1 AND t3.CommunalSumCC <> t4.CommunalSumCC  /* в документе обрабатываются только строки с mode = 0 или 1 (детальная и субдетальная часть соответственно) */  SELECT * FROM #out ORDER BY TaxRegionID, Mode, CostGAccIDEND
GO
