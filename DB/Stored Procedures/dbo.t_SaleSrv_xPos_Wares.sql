SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE PROCEDURE [dbo].[t_SaleSrv_xPos_Wares](@CRID int)/* xPOS: Выгружает товары */ASBEGIN   /* Используется фильтр групп товаров и складов. Выгружаются только товары, у которых есть цена */  DECLARE @PCatID int, @PGrID int,          @Categories varchar(250), @Groups varchar(250), @Delim varchar(10)  SELECT @Categories = dbo.zf_Var('Rest_CatFilter')  SELECT @Groups = dbo.zf_Var('Rest_GroupFilter')  SELECT @Delim = dbo.zf_Var('z_FilterListSeparator')  CREATE TABLE #SaleSrv_xPOSWaresTemp(    ProdID int,    PGrID int,    StockID int,      ProdName varchar(200),    BarCode varchar(42),    Note varchar(200),    FType char(1)    )  INSERT INTO #SaleSrv_xPOSWaresTemp(ProdID, ProdName, PGrID, StockID, BarCode, Note, FType)    SELECT p.ProdID, p.ProdName,           CASE p.PGrID WHEN 0 THEN p.PCatID ELSE p.PGrID + p.PCatID*100000 END,           p.PGrID3, m.BarCode, p.Notes, SUBSTRING(g.Notes, 1, 1)    FROM r_Prods p WITH(NOLOCK)    INNER JOIN r_ProdMQ m WITH (NOLOCK)      ON p.ProdID = m.ProdID AND p.UM = m.UM     INNER JOIN r_ProdG2 g WITH (NOLOCK)       ON p.PGrID2 = g.PGrID2    WHERE p.ProdID <> 0 AND p.PCatID > 0 AND          dbo.zf_MatchFilterInt(p.PCatID, @Categories, @Delim) = 1 AND          dbo.zf_MatchFilterInt(p.PGrID, @Groups, @Delim) = 1 AND          EXISTS(SELECT TOP 1 1 FROM r_ProdMP WITH (NOLOCK) WHERE ProdID = p.ProdID)  SELECT     CASE FTYPE       WHEN 'N' THEN ('N' + CAST(ProdID AS varchar(20)))      ELSE CAST(ProdID AS varchar(20))    END AS CODE, PGrID AS WGCODE, StockID AS SCTCODE,    REPLACE(REPLACE(ProdName, '”', '"'), '“', '"') AS NAME,    LEFT(REPLACE(REPLACE(ProdName, '”', '"'), '“', '"'), 42) AS SHORTNAME,    CAST(1 AS bit) AVAIL, '' AS NOTE, BarCode AS BARCODE, FTYPE  FROM #SaleSrv_xPOSWaresTemp      DROP TABLE #SaleSrv_xPOSWaresTemp  RETURN 0Error:  IF @@TranCount > 0 ROLLBACK TRAN  RETURN 1END
GO
