SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE PROCEDURE [dbo].[p_GetE04T06](@OurID int, @BDate smalldatetime)/* Возвращает данные таблицы E04T06 (экспорт в "АРМ Звіт страхувальника") */ASBEGIN  SET NOCOUNT ON  DECLARE @PeriodBegin smalldatetime, @PeriodEnd smalldatetime, @PeriodM int, @PeriodY int  SET @PeriodBegin = dbo.zf_GetDate(dbo.zf_GetMonthFirstDay(@BDate))  SET @PeriodEnd = dbo.zf_GetDate(dbo.zf_GetMonthLastDay(@BDate))  SET @PeriodY = DATEPART(yyyy, @BDate)  SET @PeriodM = DATEPART(mm, @BDate)  /* выборка актуального кадрового состояния за отчетный период */  DECLARE @EmpMPst TABLE (OurID int, EmpID int, BDate smalldatetime, PensCatID int)  INSERT INTO @EmpMPst(OurID, EmpID, BDate, PensCatID)  SELECT OurID, EmpID, BDate, PensCatID  FROM   r_EmpMPst s  WHERE  s.OurID = @OurID AND s.BDate = (SELECT Max(ss.BDate) FROM r_EmpMPst ss WHERE s.OurID = ss.OurID AND s.EmpID = ss.EmpID AND ((BDate BETWEEN @PeriodBegin AND @PeriodEnd) OR  (EDate BETWEEN @PeriodBegin AND @PeriodEnd) OR (BDate < @PeriodBegin AND EDate > @PeriodEnd)))  /* получить данные о начислениях за указанный период */  DECLARE  @Pays TABLE (StepID int, OurID int, EmpID int, SumCC numeric(21,9), UniSocDedRate numeric(21,9), UniSocDedСС numeric(21,9), SumCCByUniSocDed numeric(21,9) DEFAULT 0)  INSERT INTO  @Pays (OurID, EmpID, SumCC, UniSocDedRate, UniSocDedСС)  SELECT OurID, EmpID, SumCC, dd.UniSocDedRate, dd.UniSocDedСС  FROM   p_LRec m         JOIN p_LRecD d ON d.ChID = m.ChID         JOIN p_LRecDD dd ON d.AChID = dd.AChID         JOIN r_PayTypes p ON dd.PayTypeID = p.PayTypeID  WHERE m.LRecType = 0 AND SrcDate BETWEEN @PeriodBegin AND @PeriodEnd AND p.IsDeduction = 0 AND p.FundType BETWEEN 0 AND 3  /* вычислить базис облагаемой суммы по каждому коду выплаты; суммы  SumCCByUniSocDed и SumCC     могут отличаться когда начисления по сотруднику превышают максимальную облагаемую сумму */  UPDATE @Pays SET StepID = 1, SumCCByUniSocDed = 100 * UniSocDedСС / UniSocDedRate WHERE UniSocDedRate > 0  /* консолидация сумм по сотруднику */  INSERT INTO  @Pays (StepID, OurID, EmpID, SumCC, UniSocDedСС, SumCCByUniSocDed)  SELECT 2, OurID, EmpID,  SUM(SumCC), SUM(UniSocDedСС), SUM(SumCCByUniSocDed)  FROM @Pays  GROUP BY  OurID, EmpID  /* очистка промежуточных значений */  DELETE FROM @Pays WHERE StepID <> 2  /* результирующий набор данных */  SELECT  s.EmpID,          ISNULL(n.UAEmpLastName, e.UAEmpLastName)		AS UAEmpLastName ,          ISNULL(n.UAEmpFirstName, e.UAEmpFirstName)	AS UAEmpFirstName,          ISNULL(n.UAEmpParName, e.UAEmpParName)		AS UAEmpParName,          PensCatID,          IsCitizen,          @PeriodY	AS PeriodY,          @PeriodM	AS PeriodM,          NULL		AS PayType,          NULL		AS SpecExp,          @PeriodY	AS PayYear,          @PeriodM	AS PayMonth,          CASE WHEN EmpSex = 2 THEN 0 WHEN EmpSex > 2 THEN NULL ELSE 1 END							AS Sex,          CASE WHEN (e.WorkBookNo IS NOT NULL) AND (e.WorkBookSer IS NOT NULL) THEN 1 ELSE 0 END	AS WorkBookFound,          CASE WHEN e.TaxCode = '' THEN n.PassSer + ' ' + n.PassNo ELSE e.TaxCode END				AS TaxCode,          ISNULL(p.SumCC, 0)			AS SumCC,          ISNULL(p.UniSocDedСС, 0)		AS UniSocDedСС,          ISNULL(p.SumCCByUniSocDed, 0) AS SumCCMaxUniSocDed  FROM    @Pays p          JOIN @EmpMPst s  ON p.OurID = s.OurID AND p.EmpID = s.EmpID          JOIN r_Emps e ON e.EmpID = s.EmpID          LEFT JOIN r_EmpNamesDates n ON n.OurID = s.OurID AND n.EmpID = s.EmpID AND s.BDate BETWEEN n.BDate AND n.EDate  ORDER BY p.OurID, p.EmpIDEND
GO
