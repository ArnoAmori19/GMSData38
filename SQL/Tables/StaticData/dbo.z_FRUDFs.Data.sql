INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('БУ_АкцизПоПартии', 'БДПроцедура(''b_GetCstExcCC'',  ВСтроку(Товар) + '';''+ ВСтроку(Партия), ''@ExcCC'')', 'БДПроцедура(''b_GetCstExcCC'',  STR(CurrentDS.ProdID) + '';''+ STR(CurrentDS.PPID), ''@ExcCC'')', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('БУ_ВС_ЗачетЗадолженности', 'ЕСЛИ(Параметр 1 <= 0, 0, ЕСЛИ(Параметр 2 <= Параметр 1, Параметр 2, Параметр 1))', 'IF(#op1# <= 0, 0, IF(#op2# <= #op1#, #op2#, #op1#))', '', '', '', '', 'Возвращает сумму с НДС, используемую в проводке зачета задолженностей при приходовании товара, услуги по второму событию. Параметр 1 - ссыллка на поле с сальдо по счету взаиморасчетов, Параметр 2 - ссыллка на поле суммы с НДС', '', '', '', -1);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('БУ_ВС_НДС', 'ЕСЛИ(Параметр 1 <= 0, 0, ЕСЛИ(Параметр 2 <= Параметр 1, Параметр 2, Параметр 1))', 'IF(#op1# <= 0, 0, IF(#op2# <= #op1#, #op2#, #op1#))', '', '', '', '', 'Возвращает сумму НДС по второму событию при приходовании ТМЦ. Параметр 1 - ссыллка на поле с НДС сальдо по счету взаиморасчетов. Параметр 2 - ссыллка на поле суммы НДС', '', '', '', -1);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('БУ_ВС_РасчетныйСчетПриход', 'ЕСЛИ((((Счет документа >= 36100) И (Счет документа <= 36199)) И (Сальдо документа, с НДС >= 0)) ИЛИ (((Счет документа >= 37700) И (Счет документа <= 37799)) И (Сальдо документа, с НДС <= 0)), 0, ЕСЛИ(Параметр 1 <= МОДУЛЬЧИСЛА(Сальдо документа, с НДС), Пар', 'IF((((CurrentDS.GTAccID >= 36100) AND (CurrentDS.GTAccID <= 36199)) AND (CurrentDS.GTSum_wt >= 0)) OR (((CurrentDS.GTAccID >= 37700) AND (CurrentDS.GTAccID <= 37799)) AND (CurrentDS.GTSum_wt <= 0)), 0, IF(#op1# <= МОДУЛЬЧИСЛА(CurrentDS.GTSum_wt), #op1#, М', 'аметр 1, МОДУЛЬЧИСЛА(Сальдо документа, с НДС)))', 'ОДУЛЬЧИСЛА(CurrentDS.GTSum_wt)))', '', '', 'Возвращает сумму с НДС, которую нужно провести по второму событию при поступлении денег на расчетный счет за отгруженные товары, оказанные услуги. Параметр 1 - ссылка на эту сумму', '', '', '', -1);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('БУ_ВС_РасчетныйСчетРасход', 'ЕСЛИ(Сальдо документа, с НДС <= 0, 0, ЕСЛИ(Сумма с НДС <= Сальдо документа, с НДС, Сумма с НДС, Сальдо документа, с НДС))', 'IF(CurrentDS.GTSum_wt <= 0, 0, IF(CurrentDS.SumCC_wt <= CurrentDS.GTSum_wt, CurrentDS.SumCC_wt, CurrentDS.GTSum_wt))', '', '', '', '', 'Возвращает сумму с НДС, которую нужно провести по второму событию при оплате за полученные товары, работы, услуги', '', '', '', -1);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('БУ_ЗемельныйУчасток', 'IF(БДПОИСК(ACatID, ''r_AssetH'',''r_AssetH.AssID = CurrentDS.AssID AND r_AssetH.BDate <= '' + ДАТУВСТРОКУ(CurrentDS.DocDate, 1) + '' ORDER BY BDate DESC'') = 101, 1, 0)', 'IF(БДПОИСК(ACatID, ''r_AssetH'',''r_AssetH.AssID = CurrentDS.AssID AND r_AssetH.BDate <= '' + ДАТУВСТРОКУ(CurrentDS.DocDate, 1) + '' ORDER BY BDate DESC'') = 101, 1, 0)', '', '', '', '', 'Возвращает 1, если основное средство в текущем наборе данных является щземельным участком, в противном случае возвращает 0', '', '', '', -1);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('БУ_КатегорияОС', 'IF(БДПОИСК(r_AssetH.ACatID, r_AssetH,''r_AssetH.AssID = CurrentDS.AssID AND r_AssetH.BDate <= '' + ДАТУВСТРОКУ(CurrentDS.DocDate, 1) + '' ORDER BY BDate DESC'') = #op1#, #op2#, 0)', 'IF(БДПОИСК(r_AssetH.ACatID, r_AssetH,''r_AssetH.AssID = CurrentDS.AssID AND r_AssetH.BDate <= '' + ДАТУВСТРОКУ(CurrentDS.DocDate, 1) + '' ORDER BY BDate DESC'') = #op1#, #op2#, 0)', '', '', '', '', 'Если код категории основного средства совпадает с указанным в Параметре 1, возвращает сумму, указанную в Параметре 2, иначе возвращает 0.', '', '', '', -1);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('БУ_КатегорияОС_Исключить', 'IF(БДПОИСК(r_AssetH.ACatID, r_AssetH,''r_AssetH.AssID = CurrentDS.AssID AND r_AssetH.BDate <= '' + ДАТУВСТРОКУ(CurrentDS.DocDate, 1) + '' ORDER BY BDate DESC'') <> #op1#, #op2#, 0)', 'IF(БДПОИСК(r_AssetH.ACatID, r_AssetH,''r_AssetH.AssID = CurrentDS.AssID AND r_AssetH.BDate <= '' + ДАТУВСТРОКУ(CurrentDS.DocDate, 1) + '' ORDER BY BDate DESC'') <> #op1#, #op2#, 0)', '', '', '', '', 'Если код категории ОС совпадает с введенным в Параметре 1,  возвращает 0, иначе возврашает значение, указанное в Параметре 2', '', '', '', -1);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('БУ_КатегорияПерсонала', 'БДПОИСК(BOldPersCat, ''Справочник служащих (Внутренние фирмы)'', Справочник служащих (Внутренние фирмы).Код служащего = Код служащего И Справочник служащих (Внутренние фирмы).Код фирмы = Код фирмы)', 'БДПОИСК(BOldPersCat, ''r_EmpMO'', r_EmpMO.EmpID = CurrentDS.EmpID AND r_EmpMO.OurID = CurrentDS.OurID)', '', '', '', '', 'Возвращает код категории персонала из справочника служащих (закладка "Фирмы")', '', '', '', -1);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('БУ_КодКатегорииОС', 'БДПОИСК(r_AssetH.ACatID, r_AssetH,''r_AssetH.AssID = CurrentDS.AssID AND r_AssetH.BDate <= '' + ДАТУВСТРОКУ(CurrentDS.DocDate, 1) + '' ORDER BY BDate DESC'')', 'БДПОИСК(r_AssetH.ACatID, r_AssetH,''r_AssetH.AssID = CurrentDS.AssID AND r_AssetH.BDate <= '' + ДАТУВСТРОКУ(CurrentDS.DocDate, 1) + '' ORDER BY BDate DESC'')', '', '', '', '', 'Возвращает код категории необоротного актива из справочника ОС', '', '', '', -1);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('БУ_КодКатегорииТМЦ', 'БДПОИСК(Код бухгалтерской категории ТМЦ, ''Справочник товаров'', Справочник товаров.Код товара = Код товара)', 'БДПОИСК(PBGrID, ''r_Prods'', r_Prods.ProdID = CurrentDS.ProdID)', '', '', '', '', 'Возвращает код бухгалтерской категории ТМЦ', '', '', '', -1);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('БУ_КоэффициентВозмещения', '2', '2', '', '', '', '', 'Возвращает коэффициент для расчета суммы возмещения недостачи виновным лицом', '', '', '', -1);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('БУ_Наценка', '(БУ_ЦенаРеализацииКЦП(0, 0, 0) - БУ_Себестоимость(0, 0, 0))', '(БУ_ЦЕНАРЕАЛИЗАЦИИКЦП(0, 0, 0) - БУ_СЕБЕСТОИМОСТЬ(0, 0, 0))', '', '', '', '', 'Возвращает сумму торговой наценки, рассчитанную на основе данных из КЦП', '', '', '', -1);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('БУ_НЗ_ПФсПредприятия', 'ЕСЛИ(ЗК_ПараметрыСотрудника(Код служащего, ДатуВСтроку(Дата, 0), ВСТРОКУ(Код фирмы) + '';21'') = 0, ЕСЛИ(Параметр 1 <= Параметр 2, Параметр 1 * (НЗ_БУ_СПредпрПФ(0, 0, 0) / 100), Параметр 2 * (НЗ_БУ_СПредпрПФ(0, 0, 0) / 100)), ЕСЛИ(Параметр 1 <= Параметр 2', 'IF(ЗК_ПараметрыСотрудника(CurrentDS.EmpID, ДатуВСтроку(CurrentDS.DocDate, 0), STR(CurrentDS.OurID) + '';21'') = 0, IF(#op1# <= #op2#, #op1# * (НЗ_БУ_СПРЕДПРПФ(0, 0, 0) / 100), #op2# * (НЗ_БУ_СПРЕДПРПФ(0, 0, 0) / 100)), IF(#op1# <= #op2#, #op1# * (НЗ_БУ_СП', ', Параметр 1 * (НЗ_БУ_СПредпрПФ_льгота(0, 0, 0) / 100), Параметр 2 * (НЗ_БУ_СПредпрПФ_льгота(0, 0, 0) / 100)))', 'РЕДПРПФ_ЛЬГОТА(0, 0, 0) / 100), #op2# * (НЗ_БУ_СПРЕДПРПФ_ЛЬГОТА(0, 0, 0) / 100)))', '', '', 'Возвращает сумму начисления на зарплату в Пенсионный фонд. Параметр 1 - База налогообложения. Параметр 2 - Максимально облагаемая сумма', '', '', '', -1);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('БУ_НоваяНаценка', '(БУ_ЦенаРеализацииНоваяКЦП(0, 0, 0) - БУ_НоваяСебестоимость(0, 0, 0))', '(БУ_ЦЕНАРЕАЛИЗАЦИИНОВАЯКЦП(0, 0, 0) - БУ_НОВАЯСЕБЕСТОИМОСТЬ(0, 0, 0))', '', '', '', '', 'Возвращает сумму наценки из новой КЦП (для документа "Переоценка партий ТМЦ")', '', '', '', -1);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('БУ_НоваяСебестоимость', 'БДПОИСК(Себестоимость ЛВ, ''Справочник товаров (Цены прихода Бухгалтерии)'', Справочник товаров (Цены прихода Бухгалтерии).Код товара = Код товара И Справочник товаров (Цены прихода Бухгалтерии).КЦП = Новый КЦП)', 'БДПОИСК(CostAC, ''b_PInP'', b_PInP.ProdID = CurrentDS.ProdID AND b_PInP.PPID = CurrentDS.NewPPID)', '', '', '', '', 'Возвращает себестоимость из новой КЦП данного товара (для документа "Переоценка партий ТМЦ")', '', '', '', -1);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('БУ_ОсновноеСредство', '0.00', '0.00', '', '', '', '', 'Возвращает 1, если объект из справочника ОС является основным средством, иначе возвращает 0', '', '', '', -1);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('БУ_ПервоначальнаяСтоимостьОС', 'БДПОИСК(r_AssetH.PriceCC_nt, r_AssetH,''r_AssetH.AssID = CurrentDS.AssID AND r_AssetH.BDate <= '' + ДАТУВСТРОКУ(CurrentDS.DocDate, 1) + '' ORDER BY BDate DESC'')', 'БДПОИСК(r_AssetH.PriceCC_nt, r_AssetH,''r_AssetH.AssID = CurrentDS.AssID AND r_AssetH.BDate <= '' + ДАТУВСТРОКУ(CurrentDS.DocDate, 1) + '' ORDER BY BDate DESC'')', '', '', '', '', 'Возвращает первоначальную стоимость ОС', '', '', '', -1);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('БУ_ПроизводственноеОС', 'МОДУЛЬЧИСЛА(БДПОИСК(IsProdAss, ''r_AssetH'',''r_AssetH.AssID = CurrentDS.AssID AND r_AssetH.BDate <= '' + ДАТУВСТРОКУ(CurrentDS.DocDate, 1) + '' ORDER BY BDate DESC''))', 'МОДУЛЬЧИСЛА(БДПОИСК(IsProdAss, ''r_AssetH'',''r_AssetH.AssID = CurrentDS.AssID AND r_AssetH.BDate <= '' + ДАТУВСТРОКУ(CurrentDS.DocDate, 1) + '' ORDER BY BDate DESC''))', '', '', '', '', 'Возвращает 1, если ОС является производственным, в противном случае возвращает 0', '', '', '', -1);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('БУ_Процент', 'ЕСЛИ(Параметр 3 = 1, (Параметр 1 / (100 + Параметр 2)) * Параметр 2, (Параметр 1 / 100) * Параметр 2)', 'IF(#op3# = 1, (#op1# / (100 + #op2#)) * #op2#, (#op1# / 100) * #op2#)', NULL, NULL, NULL, NULL, 'Возвращает процент от суммы.', 'Сумма', 'Процент (%)', 'Если равен 1, вычисляется включенный в сумму процент, иначе процент от суммы.', 0);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('БУ_ПС_НДС', 'ЕСЛИ(Параметр 1 <= 0, Параметр 2, ЕСЛИ(Параметр 2 <= Параметр 1, 0, Параметр 2 - Параметр 1))', 'IF(#op1# <= 0, #op2#, IF(#op2# <= #op1#, 0, #op2# - #op1#))', '', '', '', '', 'Возвращает сумму НДС по первому событию при приходовании ТМЦ. Параметр 1 - ссыллка на поле с НДС сальдо по счету взаиморасчетов. Параметр 2 - ссыллка на поле суммы НДС', '', '', '', -1);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('БУ_ПС_РасчетныйСчетПриход', 'ЕСЛИ((((Счет документа >= 36100) И (Счет документа <= 36199)) И (Сальдо документа, с НДС >= 0)) ИЛИ (((Счет документа >= 37700) И (Счет документа <= 37799)) И (Сальдо документа, с НДС <= 0)), Параметр 1, ЕСЛИ(Параметр 1 <= МОДУЛЬЧИСЛА(Сальдо документа, с ', 'IF((((CurrentDS.GTAccID >= 36100) AND (CurrentDS.GTAccID <= 36199)) AND (CurrentDS.GTSum_wt >= 0)) OR (((CurrentDS.GTAccID >= 37700) AND (CurrentDS.GTAccID <= 37799)) AND (CurrentDS.GTSum_wt <= 0)), #op1#, IF(#op1# <= МОДУЛЬЧИСЛА(CurrentDS.GTSum_wt), 0, (', 'НДС), 0, (Параметр 1 - МОДУЛЬЧИСЛА(Сальдо документа, с НДС))))', '#op1# - МОДУЛЬЧИСЛА(CurrentDS.GTSum_wt))))', '', '', 'Возвращает сумму с НДС полученной предоплаты за товар, услугу, которая должна быть проведена по первому событию. Параметр 1 - ссылка на эту сумму.', '', '', '', -1);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('БУ_ПС_РасчетныйСчетПриход_НДС', 'ЕСЛИ((((Счет документа >= 36100) И (Счет документа <= 36199)) И (НДС сальдо документа >= 0)) ИЛИ (((Счет документа >= 37700) И (Счет документа <= 37799)) И (НДС сальдо документа <= 0)), Параметр 1, ЕСЛИ(Параметр 1 <= МОДУЛЬЧИСЛА(НДС сальдо документа), 0, ', 'IF((((CurrentDS.GTAccID >= 36100) AND (CurrentDS.GTAccID <= 36199)) AND (CurrentDS.GTTaxSum >= 0)) OR (((CurrentDS.GTAccID >= 37700) AND (CurrentDS.GTAccID <= 37799)) AND (CurrentDS.GTTaxSum <= 0)), #op1#, IF(#op1# <= МОДУЛЬЧИСЛА(CurrentDS.GTTaxSum), 0, (', '(Параметр 1 - МОДУЛЬЧИСЛА(НДС сальдо документа))))', '#op1# - МОДУЛЬЧИСЛА(CurrentDS.GTTaxSum))))', '', '', 'Возвращает сумму НДС, которая должна быть проведена по первому событию при получении предоплаты за товар, услугу. Параметр 1 - ссылка на эту сумму.', '', '', '', -1);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('БУ_ПС_РасчетныйСчетРасход', 'ЕСЛИ(Сальдо документа, с НДС <= 0, Сумма с НДС, ЕСЛИ(Сумма с НДС <= Сальдо документа, с НДС, 0, Сумма с НДС - Сальдо документа, с НДС))', 'IF(CurrentDS.GTSum_wt <= 0, CurrentDS.SumCC_wt, IF(CurrentDS.SumCC_wt <= CurrentDS.GTSum_wt, 0, CurrentDS.SumCC_wt - CurrentDS.GTSum_wt))', '', '', '', '', 'Возвращает сумму предоплаты с НДС, которая должна быть проведена по первому событию', '', '', '', -1);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('БУ_ПС_РасчетныйСчетРасход_НДС', 'ЕСЛИ(НДС сальдо документа <= 0, Сумма НДС, ЕСЛИ(Сумма НДС <= НДС сальдо документа, 0, Сумма НДС - НДС сальдо документа))', 'IF(CurrentDS.GTTaxSum <= 0, CurrentDS.TaxSum, IF(CurrentDS.TaxSum <= CurrentDS.GTTaxSum, 0, CurrentDS.TaxSum - CurrentDS.GTTaxSum))', '', '', '', '', 'Возвращает сумму НДС (налоговый кредит) при предоплате (первое событие)', '', '', '', -1);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('БУ_Себестоимость', 'БДПОИСК(Справочник товаров (Цены прихода Бухгалтерии).Себестоимость ЛВ, Справочник товаров (Цены прихода Бухгалтерии), Справочник товаров (Цены прихода Бухгалтерии).Код товара = Код товара И Справочник товаров (Цены прихода Бухгалтерии).КЦП = КЦП)', 'БДПОИСК(b_PInP.CostAC, b_PInP, b_PInP.ProdID = CurrentDS.ProdID AND b_PInP.PPID = CurrentDS.PPID)', '', '', '', '', 'Возвращает себестоимость реализуемого товара из таблицы "Цены прихода Бухгалтерии"', '', '', '', -1);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('БУ_Себестоимость_Торговля', 'БДПОИСК(Справочник товаров (Цены прихода Торговли).Себестоимость ВС, Справочник товаров (Цены прихода Торговли), Справочник товаров (Цены прихода Торговли).Код товара = Код товара И Справочник товаров (Цены прихода Торговли).КЦП = КЦП) * Количество', 'БДПОИСК(t_PInP.CostCC, t_PInP, t_PInP.ProdID = CurrentDS.ProdID AND t_PInP.PPID = CurrentDS.PPID) * CurrentDS.Qty', '', '', '', '', 'Возвращает себестоимость реализуемого товара из таблицы "Цены прихода Торговли". Используйте, если производится копирование из Торговли в Бухгалтерию', '', '', '', -1);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('БУ_СтавкаНДС', 'БДФункция(''zf_GetProdTaxPercent'',  ВСТРОКУ(CurrentDS.ProdID) + '';'' + ДатуВСтроку(CurrentDS.DocDate)) / 100', 'БДФункция(''zf_GetProdTaxPercent'',  STR(CurrentDS.ProdID) + '';'' + ДатуВСтроку(CurrentDS.DocDate)) / 100', '', '', '', '', 'Возвращает ставку НДС (в долях от единицы) по конкретному товару', '', '', '', 0);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('БУ_СтатусПредприятия', 'МОДУЛЬЧИСЛА(БДПОИСК(Справочник предприятий.Плательщик НДС, Справочник предприятий, Справочник предприятий.Код предприятия = Код предприятия))', 'МОДУЛЬЧИСЛА(БДПОИСК(r_Comps.TaxPayer, r_Comps, r_Comps.CompID = CurrentDS.CompID))', '', '', '', '', 'Возвращает 1, если предприятие является плательщиком НДС, и 0 - если не является', '', '', '', -1);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('БУ_СтатусПредприятияИзКЦП', 'МОДУЛЬЧИСЛА(БДПОИСК(Справочник предприятий.Плательщик НДС, ''Справочник предприятий'' + '','' + ''Справочник товаров (Цены прихода Бухгалтерии)'', Справочник товаров (Цены прихода Бухгалтерии).Код товара = Код товара И Справочник товаров (Цены прихода Бух', 'МОДУЛЬЧИСЛА(БДПОИСК(r_Comps.TaxPayer, ''r_Comps'' + '','' + ''b_PInP'', b_PInP.ProdID = CurrentDS.ProdID AND b_PInP.PPID = CurrentDS.PPID AND b_PInP.CompID = r_Comps.CompID))', 'галтерии).КЦП = КЦП И Справочник товаров (Цены прихода Бухгалтерии).Код предприятия = Справочник предприятий.Код предприятия))', '', '', '', 'Возвращает 1, если предприятие из КЦП является плательщиком НДС, и 0 - если не является', '', '', '', -1);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('БУ_СубсчетИзВалютныйСчетЛВ', 'БДПОИСК(Справочник внутренних фирм - Валютные счета.Код счета, Справочник внутренних фирм - Валютные счета, Справочник внутренних фирм - Валютные счета.В\Счет Фирмы = В\Счет Фирмы)', 'БДПОИСК(r_OursAC.GAccID, r_OursAC, r_OursAC.AccountAC = CurrentDS.AccountAC)', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('БУ_СубсчетИзРасчетныйСчетВС', 'БДПОИСК(Справочник внутренних фирм - Расчетные счета.Код счета, Справочник внутренних фирм - Расчетные счета, Справочник внутренних фирм - Расчетные счета.Р\Счет Фирмы = Р\Счет Фирмы)', 'БДПОИСК(r_OursCC.GAccID, r_OursCC, r_OursCC.AccountCC = CurrentDS.AccountCC)', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('БУ_СчетАкцизныеМарки', '20600', '20600', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('БУ_СчетАкцизныйСбор', '28500', '28500', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('БУ_СчетЗатрат', 'ЕСЛИ(Параметр 1 <> 0, Параметр 1 * 100, 94900)', 'IF(#op1# <> 0, #op1# * 100, 94900)', '', '', '', '', 'Возвращает код счета затрат 9 класса. Параметр 1 - ссылка на поле, содержащее код счета затрат. Если код счета затрат не выбран - возвращает 949 счет', '', '', '', -1);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('БУ_СчетЗатратЗарплаты', 'ЕСЛИ(Параметр 1 = 0, 91000, ЕСЛИ(Параметр 1 = 1, 92000, ЕСЛИ(Параметр 1 = 2, 94100, ЕСЛИ(Параметр 1 = 3, 94900, 93000))))', 'IF(#op1# = 0, 91000, IF(#op1# = 1, 92000, IF(#op1# = 2, 94100, IF(#op1# = 3, 94900, 93000))))', '', '', '', '', 'Возвращает код счета затрат 9 класса, используемый при начислении зарплаты. Параметр 1 - функция, возвращающая код категории персонала', '', '', '', -1);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('БУ_СчетЗатратИзносаОС', 'ЕСЛИ((Параметр 1 >= 111) И (Параметр 1 <= 117), 83200, ЕСЛИ((Параметр 1 >= 121) И (Параметр 1 <= 127), 83300, 83100))', 'IF((#op1# >= 111) AND (#op1# <= 117), 83200, IF((#op1# >= 121) AND (#op1# <= 127), 83300, 83100))', '', '', '', '', 'Возвращает код затратного счета 8 класса для износа необоротных активов. Параметр 1 - функция, возвращающая код категории ОС', '', '', '', -1);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('БУ_СчетЗатратОС', 'БДПОИСК(GAccID, ''r_AssetH'',''r_AssetH.AssID = CurrentDS.AssID AND r_AssetH.BDate <= '' + ДАТУВСТРОКУ(CurrentDS.DocDate, 1) + '' ORDER BY BDate DESC'')', 'БДПОИСК(GAccID, ''r_AssetH'',''r_AssetH.AssID = CurrentDS.AssID AND r_AssetH.BDate <= '' + ДАТУВСТРОКУ(CurrentDS.DocDate, 1) + '' ORDER BY BDate DESC'')', '', '', '', '', 'Возвращает код счета затрат 9 класса для данного ОС', '', '', '', -1);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('БУ_СчетЗатратТМЦ', 'ЕСЛИ((Параметр 1 = 209) ИЛИ ((Параметр 1 >= 201) И (Параметр 1 <= 205)), (Параметр 1 + 600) * 100, ЕСЛИ((Параметр 1 = 207) ИЛИ (Параметр 1 = 208), (Параметр 1 + 599) * 100, ЕСЛИ(Параметр 1 = 281, 80800, 80900)))', 'IF((#op1# = 209) OR ((#op1# >= 201) AND (#op1# <= 205)), (#op1# + 600) * 100, IF((#op1# = 207) OR (#op1# = 208), (#op1# + 599) * 100, IF(#op1# = 281, 80800, 80900)))', '', '', '', '', 'Возвращает счет затрат 8 класса на списание различных видов ТМЦ. В качестве параметра 1 следует передать функцию, возвращающую код бухгалтерской категории ТМЦ', '', '', '', -1);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('БУ_СчетИзносаОС', 'ЕСЛИ((Параметр 1 >= 111) И (Параметр 1 <= 117), 13200, ЕСЛИ((Параметр 1 >= 121) И (Параметр 1 <= 127), 13300, 13100))', 'IF((#op1# >= 111) AND (#op1# <= 117), 13200, IF((#op1# >= 121) AND (#op1# <= 127), 13300, 13100))', '', '', '', '', 'Возвращает счет начисления износа ОС, НМА и прочих нематериальных активов. Параметр 1 - функция, возвращающая код категории ОС', '', '', '', -1);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('БУ_СчетКапИнвестиций', 'БДПОИСК(r_AssetC.Notes, ''r_AssetC'' + '','' + ''r_AssetH'',''r_AssetH.AssID = CurrentDS.AssID AND r_AssetH.ACatID = r_AssetC.ACatID AND r_AssetH.BDate <= '' + ДАТУВСТРОКУ(CurrentDS.DocDate, 1) + '' ORDER BY BDate DESC'')', 'БДПОИСК(r_AssetC.Notes, ''r_AssetC'' + '','' + ''r_AssetH'',''r_AssetH.AssID = CurrentDS.AssID AND r_AssetH.ACatID = r_AssetC.ACatID AND r_AssetH.BDate <= '' + ДАТУВСТРОКУ(CurrentDS.DocDate, 1) + '' ORDER BY BDate DESC'')', '', '', '', '', 'Возвращает код счета капитальных инвестиций на приобретение основных средств в зависимости от их категории', '', '', '', -1);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('БУ_СчетОС', 'БДПОИСК(r_AssetH.ACatID, r_AssetH,''r_AssetH.AssID = CurrentDS.AssID AND r_AssetH.BDate <= '' + ДАТУВСТРОКУ(CurrentDS.DocDate, 1) + '' ORDER BY BDate DESC'') * 100', 'БДПОИСК(r_AssetH.ACatID, r_AssetH,''r_AssetH.AssID = CurrentDS.AssID AND r_AssetH.BDate <= '' + ДАТУВСТРОКУ(CurrentDS.DocDate, 1) + '' ORDER BY BDate DESC'') * 100', '', '', '', '', 'Возвращает счет учета данного объекта необоротных активов', '', '', '', -1);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('БУ_СчетТМЦ', 'ЕСЛИ((Параметр 1 = 281) ИЛИ (Параметр 1 = 0), ЕСЛИ(БДПОИСК(Оптовый, ''Справочник складов'', Справочник складов.Код склада = Код склада) <> 0, 28100, 28200), Параметр 1 * 100)', 'IF((#op1# = 281) OR (#op1# = 0), IF(БДПОИСК(IsWholesale, ''r_Stocks'', r_Stocks.StockID = CurrentDS.StockID) <> 0, 28100, 28200), #op1# * 100)', '', '', '', '', 'Возвращает код бухгалтерской категории ТМЦ. В качестве Параметра 1 необходимо передавать функцию, возвращающую код бухгалтерской категории ТМЦ', '', '', '', -1);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('БУ_ТипНеоборАктива', 'ЕСЛИ((БУ_КодКатегорииОС(0, 0, 0) >= 101) И (БУ_КодКатегорииОС(0, 0, 0) <= 109), 1, ЕСЛИ((БУ_КодКатегорииОС(0, 0, 0) >= 111) И (БУ_КодКатегорииОС(0, 0, 0) <= 117), 2, ЕСЛИ((БУ_КодКатегорииОС(0, 0, 0) >= 121) И (БУ_КодКатегорииОС(0, 0, 0) <= 127), 3, 0)))', 'IF((БУ_КОДКАТЕГОРИИОС(0, 0, 0) >= 101) AND (БУ_КОДКАТЕГОРИИОС(0, 0, 0) <= 109), 1, IF((БУ_КОДКАТЕГОРИИОС(0, 0, 0) >= 111) AND (БУ_КОДКАТЕГОРИИОС(0, 0, 0) <= 117), 2, IF((БУ_КОДКАТЕГОРИИОС(0, 0, 0) >= 121) AND (БУ_КОДКАТЕГОРИИОС(0, 0, 0) <= 127), 3, 0)))', '', '', '', '', 'Возвращает 1, если необоротный актив является ОС, 2 - если прочим необоротным активом и 3 - если нематериальным активом', '', '', '', -1);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('БУ_ЦенаПродажиОсновная', 'БДПОИСК(Справочник товаров (Цены для прайс-листов).Цена ОВ, Справочник товаров (Цены для прайс-листов), Справочник товаров (Цены для прайс-листов).Код товара = Код товара И Справочник товаров (Цены для прайс-листов).Код прайс-листа = Параметр 1) * 1.2', 'БДПОИСК(r_ProdMP.PriceMC, r_ProdMP, r_ProdMP.ProdID = CurrentDS.ProdID AND r_ProdMP.PLID = #op1#) * 1.2', '', '', '', '', 'Возвращает цену продажи с НДС из прайс-листа, код которого вводится в Параметр 1. Это - тот прайс-лист, по которому была начислена торговая наценка. Функция предназначена для корректного списания торговой наценки в розничной торговле.', '', '', '', -1);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('БУ_ЦенаРеализацииКЦП', 'ЕСЛИ(БДПОИСК(Справочник товаров.Цена включает НДС, Справочник товаров, Справочник товаров.Код товара = Код товара) = 0, БДПОИСК(Справочник товаров (Цены прихода Бухгалтерии).Цена ОВ, Справочник товаров (Цены прихода Бухгалтерии), Справочник товаров (Цены ', 'IF(БДПОИСК(r_Prods.PriceWithTax, r_Prods, r_Prods.ProdID = CurrentDS.ProdID) = 0, БДПОИСК(b_PInP.PriceMC, b_PInP, b_PInP.ProdID = CurrentDS.ProdID AND b_PInP.PPID = CurrentDS.PPID) * (1 + БУ_СТАВКАНДС(0, 0, 0)), БДПОИСК(b_PInP.PriceMC, b_PInP, b_PInP.Prod', 'прихода Бухгалтерии).Код товара = Код товара И Справочник товаров (Цены прихода Бухгалтерии).КЦП = КЦП) * (1 + БУ_СтавкаНДС(0, 0, 0)), БДПОИСК(Справочник товаров (Цены прихода Бухгалтерии).Цена ОВ, Справочник товаров (Цены прихода Бухгалтерии), Справочник', 'ID = CurrentDS.ProdID AND b_PInP.PPID = CurrentDS.PPID))', ' товаров (Цены прихода Бухгалтерии).Код товара = Код товара И Справочник товаров (Цены прихода Бухгалтерии).КЦП = КЦП))', '', 'Возвращает цену реализации с НДС из КЦП', '', '', '', -1);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('БУ_ЦенаРеализацииНоваяКЦП', 'ЕСЛИ(БДПОИСК(Справочник товаров.Цена включает НДС, Справочник товаров, Справочник товаров.Код товара = Код товара) = 0, БДПОИСК(Справочник товаров (Цены прихода Бухгалтерии).Цена ОВ, Справочник товаров (Цены прихода Бухгалтерии), Справочник товаров (Цены ', 'IF(БДПОИСК(r_Prods.PriceWithTax, r_Prods, r_Prods.ProdID = CurrentDS.ProdID) = 0, БДПОИСК(b_PInP.PriceMC, b_PInP, b_PInP.ProdID = CurrentDS.ProdID AND b_PInP.PPID = CurrentDS.NewPPID) * (1 + БУ_СТАВКАНДС(0, 0, 0)), БДПОИСК(b_PInP.PriceMC, b_PInP, b_PInP.P', 'прихода Бухгалтерии).Код товара = Код товара И Справочник товаров (Цены прихода Бухгалтерии).КЦП = Новый КЦП) * (1 + БУ_СтавкаНДС(0, 0, 0)), БДПОИСК(Справочник товаров (Цены прихода Бухгалтерии).Цена ОВ, Справочник товаров (Цены прихода Бухгалтерии), Спра', 'rodID = CurrentDS.ProdID AND b_PInP.PPID = CurrentDS.NewPPID))', 'вочник товаров (Цены прихода Бухгалтерии).Код товара = Код товара И Справочник товаров (Цены прихода Бухгалтерии).КЦП = Новый КЦП))', '', 'Возвращает цену реализации с НДС из новой КЦП', '', '', '', -1);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('ЗК_ЗарплатаПоПриказу', 'ЗК_ПараметрыСотрудника(Служащий, ДатуВСтроку(НЗ_ЗК_ДатаТекущегоКС(), 0), ВСТРОКУ(Фирма) + '';12'') * (ЗК_ПараметрыСотрудника(Служащий, ДатуВСтроку(НЗ_ЗК_ДатаТекущегоКС(), 0), ВСТРОКУ(Фирма) + '';13'')/100) * ЗК_ПараметрыСотрудника(Служащий,ДатуВСтроку(НЗ_ЗК_', 'ЗК_ПараметрыСотрудника(CurrentDS.EmpID, ДатуВСтроку(НЗ_ЗК_ДатаТекущегоКС(), 0), STR(CurrentDS.OurID) + '';12'') * (ЗК_ПараметрыСотрудника(CurrentDS.EmpID, ДатуВСтроку(НЗ_ЗК_ДатаТекущегоКС(), 0), STR(CurrentDS.OurID) + '';13'') / 100) *ЗК_ПараметрыСотрудника(', 'ДатаТекущегоКС(), 0), ВСТРОКУ(Фирма) + '';16'')', 'CurrentDS.EmpID, ДатуВСтроку(НЗ_ЗК_ДатаТекущегоКС(), 0), STR(CurrentDS.OurID) + '';16'')', '', '', NULL, NULL, NULL, NULL, 0);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('КЗ_Алименты', 'ЕСЛИ(СОДЕРЖИТ(Код вида выплаты, КЗ_СписокАлименты(0, 0, 0)), 1, 0)', 'IF(СОДЕРЖИТ(CurrentDS.PayTypeID, КЗ_СПИСОКАЛИМЕНТЫ(0, 0, 0)), 1, 0)', '', '', '', '', 'Если удерживаемая сумма относится к алиментам, возвращает 1, иначе возвращает 0. Для использования в документе "Начисление заработной платы" (модуль "Кадры и Зарплата").', '', '', '', -1);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('КЗ_БольничныеОтПредприятия', 'ЕСЛИ(СОДЕРЖИТ(Код вида выплаты, КЗ_СписокБольничныеОтПредприятия(0, 0, 0)), 1, 0)', 'IF(СОДЕРЖИТ(CurrentDS.PayTypeID, КЗ_СПИСОКБОЛЬНИЧНЫЕОТПРЕДПРИЯТИЯ(0, 0, 0)), 1, 0)', '', '', '', '', 'Если начисляемая сумма относится к больничным или компенсациям за счет предприятия, возвращает 1, иначе 0. Для использования в документе "Начисление заработной платы" (модуль "Кадры и Зарплата").', '', '', '', -1);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('КЗ_БольничныеОтСоцстраха', 'ЕСЛИ(СОДЕРЖИТ(Код вида выплаты, КЗ_СписокБольничныеОтСоцстраха(0, 0, 0)), 1, 0)', 'IF(СОДЕРЖИТ(CurrentDS.PayTypeID, КЗ_СПИСОКБОЛЬНИЧНЫЕОТСОЦСТРАХА(0, 0, 0)), 1, 0)', '', '', '', '', 'Если начисляемая сумма относится к больничным или компенсациям за счет фонда социального страхования, возвращает 1, иначе 0. Для использования в документе "Начисление заработной платы" (модуль "Кадры и Зарплата").', '', '', '', -1);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('КЗ_ЕСВ_ВН', 'ЕСЛИ(СОДЕРЖИТ(Код вида выплаты, КЗ_ЕСВ_СписокВН()), 1, 0) ', 'IF(СОДЕРЖИТ(CurrentDS.PayTypeID, КЗ_ЕСВ_СписокВН()), 1, 0)', '', '', '', '', 'Выплата является оплатой больничных', NULL, NULL, NULL, 1);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('КЗ_ЕСВ_ДВР', 'ЕСЛИ(СОДЕРЖИТ(Код вида выплаты, КЗ_ЕСВ_СписокДВР()), 1, 0)', 'IF(СОДЕРЖИТ(CurrentDS.PayTypeID, КЗ_ЕСВ_СписокДВР()), 1, 0)', '', '', '', '', 'Выплата является оплатой договоров выполнения работ', NULL, NULL, NULL, 1);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('КЗ_ЕСВ_ФОП', 'ЕСЛИ(СОДЕРЖИТ(Код вида выплаты, КЗ_ЕСВ_СписокФОП()), 1, 0)', 'IF(СОДЕРЖИТ(CurrentDS.PayTypeID, КЗ_ЕСВ_СписокФОП()), 1, 0)', '', '', '', '', 'Выплата является основной заработной платой', NULL, NULL, NULL, 1);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('КЗ_Инвалид', 'ЗК_ПараметрыСотрудника(Кодслужащего,ДатуВСтроку(НЗ_ЗК_ДатаТекущегоКС(), 0), ВСТРОКУ(Код фирмы) + '';21'')', 'ЗК_ПАРАМЕТРЫСОТРУДНИКА(CurrentDS.EmpID, ДатуВСтроку(НЗ_ЗК_ДатаТекущегоКС(), 0), STR(CurrentDS.OurID) + '';21'')', '', '', '', '', 'Содрудник являетсяинвалидом', NULL, NULL, NULL, 1);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('КЗ_КатегорияПерсонала', 'КЗ_КатегорияПерсоналаВнутренняя(ЗК_ПараметрыСотрудника(Код служащего, ДатуВСтроку(Дата, 0), ВСТРОКУ(Код фирмы) + '';5''), 0, 0)', 'КЗ_КАТЕГОРИЯПЕРСОНАЛАВНУТРЕННЯЯ(ЗК_ПараметрыСотрудника(CurrentDS.EmpID, ДатуВСтроку(CurrentDS.DocDate, 0), STR(CurrentDS.OurID) + '';5''), 0, 0)', '', '', '', '', 'Возвращает код категории персонала из справочника должностей (по умолчанию равен коду счета затрат)', '', '', '', -1);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('КЗ_КатегорияПерсоналаВнутренняя', 'БДПОИСК(Код категории должности, ''Справочник должностей'', Справочник должностей.Код должности = Параметр 1)', 'БДПОИСК(PostCID, ''r_Posts'', r_Posts.PostID = #op1#)', '', '', '', '', 'Служебная функция для внутреннего использования', '', '', '', -1);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('КЗ_КомпенсационныеВыплаты', 'ЕСЛИ(СОДЕРЖИТ(Код вида выплаты, КЗ_СписокКомпенсационныеВыплаты(0, 0, 0)), 1, 0)', 'IF(СОДЕРЖИТ(CurrentDS.PayTypeID, КЗ_СПИСОККОМПЕНСАЦИОННЫЕВЫПЛАТЫ(0, 0, 0)), 1, 0)', '', '', '', '', 'Если начисляемая сумма относится к компенсационным выплатам, возвращает 1, иначе возвращает 0. Для использования в документе "Начисление заработной платы" (модуль "Кадры и Зарплата").', '', '', '', -1);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('КЗ_МатериальнаяПомощь', 'ЕСЛИ(СОДЕРЖИТ(Код вида выплаты, КЗ_СписокМатериальнаяПомощь(0, 0, 0)), 1, 0)', 'IF(СОДЕРЖИТ(CurrentDS.PayTypeID, КЗ_СПИСОКМАТЕРИАЛЬНАЯПОМОЩЬ(0, 0, 0)), 1, 0)', '', '', '', '', 'Если начисляемая сумма относится к материальной помощи, возвращает 1, иначе возвращает 0. Для использования в документе "Начисление заработной платы" (модуль "Кадры и Зарплата").', '', '', '', -1);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('КЗ_Недостачи', 'ЕСЛИ(СОДЕРЖИТ(Код вида выплаты, КЗ_СписокНедостачи(0, 0, 0)), 1, 0)', 'IF(СОДЕРЖИТ(CurrentDS.PayTypeID, КЗ_СПИСОКНЕДОСТАЧИ(0, 0, 0)), 1, 0)', '', '', '', '', 'Если удерживаемая сумма относится к выплате компенсации за недостачу, возвращает 1, иначе возвращает 0. Для использования в документе "Начисление заработной платы" (модуль "Кадры и Зарплата").', '', '', '', -1);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('КЗ_НесчастныйСлучай', 'ЕСЛИ(СОДЕРЖИТ(Код вида выплаты, КЗ_СписокНесчастныйСлучай(0, 0, 0)), 1, 0)', 'IF(СОДЕРЖИТ(CurrentDS.PayTypeID, КЗ_СПИСОКНЕСЧАСТНЫЙСЛУЧАЙ(0, 0, 0)), 1, 0)', '', '', '', '', 'Если начисляемая сумма относится к компенсациям за несчастный случай, возвращает 1, иначе 0. Для использования в документе "Начисление заработной платы" (модуль "Кадры и Зарплата").', '', '', '', -1);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('КЗ_ОсновнаяЗП', 'ЕСЛИ(СОДЕРЖИТ(Код вида выплаты, КЗ_СписокОсновнаяЗП(0, 0, 0)), 1, 0)', 'IF(СОДЕРЖИТ(CurrentDS.PayTypeID, КЗ_СПИСОКОСНОВНАЯЗП(0, 0, 0)), 1, 0)', '', '', '', '', 'Если начисляемая сумма относится к основному фонду заработной платы, возвращает 1, иначе возвращает 0. Для использования в документе "Начисление заработной платы" (модуль "Кадры и Зарплата").', '', '', '', -1);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('КЗ_Отпускные', 'ЕСЛИ(СОДЕРЖИТ(Код вида выплаты, КЗ_СписокОтпускные(0, 0, 0)), 1, 0)', 'IF(СОДЕРЖИТ(CurrentDS.PayTypeID, КЗ_СПИСОКОТПУСКНЫЕ(0, 0, 0)), 1, 0)', '', '', '', '', 'Если начисляемая сумма относится к отпускным, возвращает 1, иначе возвращает 0. Для использования в документе "Начисление заработной платы" (модуль "Кадры и Зарплата").', '', '', '', 0);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('КЗ_ПерерасчетПодоходногоДоплата', '1004', '1004', '', '', '', '', 'Возвращает код вида выплаты/удержания, который используется при перерасчете подоходного налога, в случае если служащему возвращается излишне удержанный подоходный налог', '', '', '', -1);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('КЗ_ПерерасчетПодоходногоУдержание', '1005', '1005', '', '', '', '', 'Возвращает код вида выплаты/удержания, который используется при перерасчете подоходного налога, в случае если со служащего дополнительно удерживается подоходный налог', '', '', '', -1);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('КЗ_ПремииПоощрения', 'ЕСЛИ(СОДЕРЖИТ(Код вида выплаты, КЗ_СписокПремииПоощрения(0, 0, 0)), 1, 0)', 'IF(СОДЕРЖИТ(CurrentDS.PayTypeID, КЗ_СПИСОКПРЕМИИПООЩРЕНИЯ(0, 0, 0)), 1, 0)', '', '', '', '', 'Если сумма относится к выплате премий и поощрений, возвращает 1, иначе возвращает 0. Для использования в документе "Начисление заработной платы" (модуль "Кадры и Зарплата")', '', '', '', -1);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('КЗ_Профвзносы', 'ЕСЛИ(СОДЕРЖИТ(Код вида выплаты, КЗ_СписокПрофвзносы(0, 0, 0)), 1, 0)', 'IF(СОДЕРЖИТ(CurrentDS.PayTypeID, КЗ_СПИСОКПРОФВЗНОСЫ(0, 0, 0)), 1, 0)', '', '', '', '', 'Если удерживаемая сумма относится к профвзносам, возвращает 1, иначе возвращает 0. Для использования в документе "Начисление заработной платы" (модуль "Кадры и Зарплата").', '', '', '', -1);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('КЗ_РанееНачислено', 'БДПроцедура(''p_PrevPaid'',ДатуВСтроку(CurrentDS.DocDate, 0) +  '';'' + ВСтроку(CurrentDS.OurID) + '';''+ ВСтроку(CurrentDS.LRecType) + '';''+ ВСтроку(CurrentDS.EmpID) +'';''+ВСтроку(CurrentDS.DetSubID)+'';''+ВСтроку(CurrentDS.DetDepID)+'';''+ВСтроку(CurrentDS.SubID)', 'БДПроцедура(''p_PrevPaid'',  ДатуВСтроку(CurrentDS.DocDate, 0) +  '';'' + STR(CurrentDS.OurID) + '';''+ STR(CurrentDS.LRecType) + '';''+ STR(CurrentDS.EmpID)+'';''+STR(CurrentDS.DetSubID)+'';''+STR(CurrentDS.DetDepID)+'';''+STR(CurrentDS.SubID)+'';''+STR(CurrentDS.DepID', '+'';''+STR(CurrentDS.DepID) + '';'' + ВСтроку(CurrentDS.PayTypeID)+'';''+ Параметр 1, ''@RetValue'')', ') + '';'' + STR(CurrentDS.PayTypeID)+'';''+ #op1#, ''@RetValue'')', '', '', 'Возвращает суммы начисленные в документах Заработная плата: начисление с типом Начисление аванса и Начисление отпускных по указанному в параметре полю', NULL, NULL, NULL, 1);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('КЗ_Совместитель', 'ЗК_ПараметрыСотрудника(Служащий,ДатуВСтроку(НЗ_ЗК_ДатаТекущегоКС(), 0), ВСтроку(Фирма) + '';17'')', 'ЗК_ПараметрыСотрудника(CurrentDS.EmpID, ДатуВСтроку(НЗ_ЗК_ДатаТекущегоКС(), 0), STR(CurrentDS.OurID) + '';17'')', '', '', '', '', NULL, NULL, NULL, NULL, 1);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('КЗ_Ссуды', 'ЕСЛИ(СОДЕРЖИТ(Код вида выплаты, КЗ_СписокСсуды(0, 0, 0)), 1, 0)', 'IF(СОДЕРЖИТ(CurrentDS.PayTypeID, КЗ_СПИСОКССУДЫ(0, 0, 0)), 1, 0)', '', '', '', '', 'Если удерживаемая сумма относится к выплате ссуд, возвращает 1, иначе возвращает 0. Для использования в документе "Начисление заработной платы" (модуль "Кадры и Зарплата").', '', '', '', -1);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('КЗ_СуммаВыходногоПособия', 'Средний оклад для сохранения его в течении периода * ЕСЛИ(Код причины увольнения = Изменение организации производства и труда,1,ЕСЛИ(Код причины увольнения = Восстановление работника, ранее выполнявшего эту работу,1,ЕСЛИ(Код причины увольнения = Отказ', 'CurrentDS.AvrSalPres * IF(CurrentDS.DisReason = 401, 1, IF(CurrentDS.DisReason = 406, 1, IF(CurrentDS.DisReason = 366, 1, IF(CurrentDS.DisReason = 363, 2, 0))))', ' от перевода вместе с предприятием, 1, ЕСЛИ(Код причины увольнения = Призыв на воинскую службу, 2, 0)) ', '', '', '', 'Возвращает сумму выходного пособия в документе Приказ: Увольнение', NULL, NULL, NULL, 1);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('КЗ_СчетЗатратЗарплаты', 'ЗК_ПараметрыСотрудника(Код служащего, ДатуВСтроку(Дата, 0), ВСТРОКУ(Код фирмы) + '';40'')', 'ЗК_ПараметрыСотрудника(CurrentDS.EmpID, ДатуВСтроку(CurrentDS.DocDate, 0), STR(CurrentDS.OurID) + '';40'')', '', '', '', '', 'Возвращает код счета затрат для категории персонала, код которой должен передаваться как Параметр 1', '', '', '', 0);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('НЗ_ЗК_ЧастныйПредприниматель', '0', '0', '', '', '', '', NULL, NULL, NULL, NULL, 1);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('НУ_ЗатратыНаОС', 'ЕСЛИ((БУ_ТипНеоборАктива(0, 0, 0) <> 2) И (БУ_ПроизводственноеОС(0, 0, 0) = 1), ЕСЛИ((БУ_КодКатегорииОС(0, 0, 0) <> 107) И (БУ_КодКатегорииОС(0, 0, 0) <> 108), ПараметрыОС(Код ОС, ДатуВСтроку(Дата, 0), ВСТРОКУ(Код фирмы) + '';10''), 0), (ПараметрыОС(Код О', 'IF((БУ_ТИПНЕОБОРАКТИВА(0, 0, 0) <> 2) AND (БУ_ПРОИЗВОДСТВЕННОЕОС(0, 0, 0) = 1), IF((БУ_КОДКАТЕГОРИИОС(0, 0, 0) <> 107) AND (БУ_КОДКАТЕГОРИИОС(0, 0, 0) <> 108), ПараметрыОС(CurrentDS.AssID, ДатуВСтроку(CurrentDS.DocDate, 0), STR(CurrentDS.OurID) + '';10'')', 'С, ДатуВСтроку(Дата, 0), ВСТРОКУ(Код фирмы) + '';1'') + ПараметрыОС(Код ОС, ДатуВСтроку(Дата, 0), ВСТРОКУ(Код фирмы) + '';5'') + ПараметрыОС(Код ОС, ДатуВСтроку(Дата, 0), ВСТРОКУ(Код фирмы) + '';6'')))', ', 0), (ПараметрыОС(CurrentDS.AssID, ДатуВСтроку(CurrentDS.DocDate, 0), STR(CurrentDS.OurID) + '';1'') + ПараметрыОС(CurrentDS.AssID, ДатуВСтроку(CurrentDS.DocDate, 0), STR(CurrentDS.OurID) + '';5'') + ПараметрыОС(CurrentDS.AssID, ДатуВСтроку(CurrentDS.Doc', '', 'Date, 0), STR(CurrentDS.OurID) + '';6'')))', 'Для производственных ОС и НМА возвращает балансовую стоимость (НУ), для скота и зеленых насаждений - 0, для непроизводственных и прочих - сумму первоначальной стоимости, ремонтов и модернизаций.', '', '', '', -1);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('НУ_КодГруппыОС', 'БДПОИСК(AGrID, ''r_AssetH'',''r_AssetH.AssID = CurrentDS.AssID AND r_AssetH.BDate <= '' + ДАТУВСТРОКУ(CurrentDS.DocDate, 1) + '' ORDER BY BDate DESC'')', 'БДПОИСК(AGrID, ''r_AssetH'',''r_AssetH.AssID = CurrentDS.AssID AND r_AssetH.BDate <= '' + ДАТУВСТРОКУ(CurrentDS.DocDate, 1) + '' ORDER BY BDate DESC'')', '', '', '', '', 'Возвращает код группы основного средства в налоговом учете', '', '', '', -1);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('НУ_НДСОтгрузки', 'ЕСЛИ(((Счет документа >= 36100) И (Счет документа <= 36199) И (НДС сальдо документа >= 0)) ИЛИ ((Счет документа >= 37700) И (Счет документа <= 37799) И (НДС сальдо документа <= 0)), 0, МОДУЛЬЧИСЛА(НДС сальдо документа))', 'IF(((CurrentDS.GTAccID >= 36100) AND (CurrentDS.GTAccID <= 36199) AND (CurrentDS.GTTaxSum >= 0)) OR ((CurrentDS.GTAccID >= 37700) AND (CurrentDS.GTAccID <= 37799) AND (CurrentDS.GTTaxSum <= 0)), 0, МОДУЛЬЧИСЛА(CurrentDS.GTTaxSum))', '', '', '', '', 'Возвращает сумму НДС на предварительно отгруженный товар', '', '', '', -1);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('НУ_ПризнакВД', 'ЕСЛИ((Код признака 5 = 1) ИЛИ (Код признака 5 = 0), 1, 0)', 'IF((CurrentDS.CodeID5 = 1) OR (CurrentDS.CodeID5 = 0), 1, 0)', '', '', '', '', 'Возвращает 1, если необходимо отразить некую сумму в валовых доходах, и 0, если не нужно', '', '', '', -1);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('НУ_ПризнакВР', 'ЕСЛИ((Код признака 5 = 2) ИЛИ (Код признака 5 = 0), 1, 0)', 'IF((CurrentDS.CodeID5 = 2) OR (CurrentDS.CodeID5 = 0), 1, 0)', '', '', '', '', 'Возвращает 1, если нужно отразить некую сумму в валовых расходах, и 0, если не нужно', '', '', '', -1);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('НУ_ПС_ВДВР', 'ЕСЛИ(Параметр 1 <= 0, Параметр 2, ЕСЛИ(Параметр 1 >= Параметр 2, 0, (Параметр 2 - Параметр 1)))', 'IF(#op1# <= 0, #op2#, IF(#op1# >= #op2#, 0, (#op2# - #op1#)))', '', '', '', '', 'Возвращает сумму валовых доходов или расходов по первому событию. Параметр 1 - сальдо по счету взаиморасчетов без НДС, параметр 2 - сумма валовых доходов или расходов', '', '', '', -1);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('НУ_СуммаОтгрузки', 'ЕСЛИ(((Счет документа >= 36100) И (Счет документа <= 36199) И (Сальдо документа, с НДС >= 0)) ИЛИ ((Счет документа >= 37700) И (Счет документа <= 37799) И (Сальдо документа, с НДС <= 0)), 0, МОДУЛЬЧИСЛА(Сальдо документа, с НДС))', 'IF(((CurrentDS.GTAccID >= 36100) AND (CurrentDS.GTAccID <= 36199) AND (CurrentDS.GTSum_wt >= 0)) OR ((CurrentDS.GTAccID >= 37700) AND (CurrentDS.GTAccID <= 37799) AND (CurrentDS.GTSum_wt <= 0)), 0, МОДУЛЬЧИСЛА(CurrentDS.GTSum_wt))', '', '', '', '', 'Возвращает сумму предварительно отгруженного покупателю товара', '', '', '', -1);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('НУ_СчетАмортизацииОС', 'БДПОИСК(Счет ОС: Аммортизация, ''Справочник основных средств: группы'', Справочник основных средств: группы.Код группы ОС = Параметр 1)', 'БДПОИСК(AssDepGAccID, ''r_AssetG'',  r_AssetG.AGrID = #op1#) ', '', '', '', '', 'Возвращает забалансовый счет для накопления амортизации основных средств по группам. Параметр 1 - функция, возвращающая код группы основного средства', '', '', '', 0);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('НУ_СчетГруппыОС', 'БДПОИСК(Счет ОС: Группа, ''Справочник основных средств: группы'', Справочник основных средств: группы.Код группы ОС = Параметр 1)', 'БДПОИСК(AssGrGAccID, ''r_AssetG'',  r_AssetG.AGrID = #op1#)', '', '', '', '', 'Возвращает код счета балансовой стоимости ОС в налоговом учете в зависимости от группы ОС. Параметр 1 - функция, возвращающая код группы ОС.', '', '', '', 0);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('ПСВС_ВС', 'ЕСЛИ(Параметр 1 <= 0, 0, ЕСЛИ(Параметр 2 <= Параметр 1, Параметр 2, Параметр 1))', 'IF(#op1# <= 0, 0, IF(#op2# <= #op1#, #op2#, #op1#))', NULL, NULL, NULL, NULL, 'Возвращает сумму 2-го события', NULL, NULL, NULL, 0);
INSERT dbo.z_FRUDFs(OperName, RFormula, EFormula, RFormula1, EFormula1, RFormula2, EFormula2, OperDesc, ArgDesc1, ArgDesc2, ArgDesc3, RevID) VALUES ('ПСВС_ПС', 'ЕСЛИ(Параметр 1 <= 0, Параметр 2, ЕСЛИ(Параметр 2 <= Параметр 1, 0, Параметр 2 - Параметр 1))', 'IF(#op1# <= 0, #op2#, IF(#op2# <= #op1#, 0, #op2# - #op1#))', NULL, NULL, NULL, NULL, 'Возвращает сумму 1-го события', NULL, NULL, NULL, 0);
